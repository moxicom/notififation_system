version: '3.8'

services:
  postgres:
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my_network

  rabbitmq:
      image: rabbitmq:3.10.7-management
      hostname: rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
        - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit-adapter disk_free_limit 2147483648
      ports:
        - 15672:15672
        - 5672:5672
      networks:
        - my_network
  
  auth_service:
    build:
      context: ./auth_service  # путь к Dockerfile для сервиса
    container_name: auth_service
    restart: always
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=postgres:5432
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - my_network

  gateway_service:
    build:
      context: ./gateway-service  # путь к Dockerfile для сервиса
    container_name: gateway_service
    restart: always
    environment:
      # - GATEWAY_PORT=${GATEWAY_PORT}
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - CALLBACK_SERV_QUEUE=${CALLBACK_SERV_QUEUE}
      - GATEWAY_INPUT_QUEUE=${GATEWAY_INPUT_QUEUE}
    ports:
      - "8080:8000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge